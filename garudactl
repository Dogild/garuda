#!/usr/bin/env python

import logging

# Logger
logger = logging.getLogger('garuda')
handler = logging.StreamHandler()
formatter = logging.Formatter('[%(levelname)s] %(name)s - %(message)s')
handler.setFormatter(formatter)
logger.addHandler(handler)
logger.setLevel(logging.DEBUG)

from time import sleep

from bambou import BambouConfig
BambouConfig.set_should_raise_bambou_http_error(False)

from garuda.core.controllers import GACoreController, GALogicPluginsController


def set_log_level(level):
    """
    """
    logger.setLevel(level)

def tdl_db_init(db, root_rest_name):
    """
    """
    if not db[root_rest_name].count():
        db[root_rest_name].insert({'ID': '1', 'userName': 'root', 'password': 'password'})

def vsd_db_init(db, root_rest_name):
    """
    """
    if not db[root_rest_name].count():
        db[root_rest_name].insert({'ID': '1', 'userName': 'root', 'password': 'password', 'enterpriseID': '2'})

    if not db['user'].count():
        db['user'].insert({'ID': '1'})

    if not db['group'].count():
        db['group'].insert({'ID': '3', 'name': 'Root Users', 'parentID': '2', 'parentType': 'enterprise'})

    if not db['enterprise'].count():
        db['enterprise'].insert({'ID': '2', 'name': 'csp', 'description': 'default enterprise'})

    if not db['systemconfig'].count():
        db['systemconfig'].insert({'ID': '3'})


def start():

    """
    """
    from garuda.channels.rest import RESTCommunicationChannel
    communication_channel = RESTCommunicationChannel(host='0.0.0.0', port=2000, threaded=True, debug=True, use_reloader=False)

    from garuda.plugins.mongodb_plugin import GAMongoStoragePlugin
    # storage_plugin = GAMongoStoragePlugin(db_name='vsd', db_initialization_function=vsd_db_init)
    storage_plugin = GAMongoStoragePlugin(db_name='garuda', db_initialization_function=tdl_db_init)

    from garuda.plugins.tdl_authentication_plugin import TDLAuthenticationPlugin
    authentication_plugin = TDLAuthenticationPlugin()


    # Instanciate plugins
    # from garuda.plugins import DefaultAuthenticationPlugin, DefaultGAStoragePlugin, DefaultPermissionsControllerPlugin
    # default_storage_controller = DefaultGAStoragePlugin()
    # default_authentication_plugin = DefaultAuthenticationPlugin()
    # default_permission_controller_plugin = DefaultPermissionsControllerPlugin()

    sdk_infos = [{'identifier': 'current', 'module': 'tdldk.v1_0'}]
    # sdk_infos = [{'identifier': 'current', 'module': 'vspk.v3_2'}]

    core = GACoreController(    sdks_info=sdk_infos,
                                communication_channel_plugins=[communication_channel],
                                authentication_plugins=[authentication_plugin],
                                storage_plugins=[storage_plugin],
                                permission_controller_plugins=[])
    core.start()

    logger.info('Garuda is initialized and ready to rock! (Press CTRL+C to quit)')
    while True:
        try:
            sleep(3000)
        except KeyboardInterrupt:
            break

    core.stop()
    logger.info('Garuda has stopped.')


if __name__ == '__main__':
    print """

                           +7
           NI??????D        I+=          Garuda 1.0.0
        IIII????????ID ?      ++         ============
      IIIIII             +    D++
    ?IIII$Z                    ===       Single node mode
   IIII I                      N===      Port: 2000
  IIIDI?                        ===:     https://garuda.org
  IIIIID                       D====
  IIIII                       7===7=
  IIIIIZ                     O=== ==
   INIII?                   =+== ==
   O?III??I               ?+===~===
     DI?????+          I++++O~===+
      N????$??????7DZ$$8N?+++===
        ?????8????++++++++++==
          ?????+++NZ=+++=+N7
             +?+_++++++=O
"""
    start()

