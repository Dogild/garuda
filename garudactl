#!/usr/bin/env python
# -*- coding: utf-8 -*-

from garuda import Garuda
from garuda.channels.rest import GARESTChannel
from garuda.plugins.storage import GAMongoStoragePlugin
from garuda.plugins.authentication import GASimpleAuthenticationPlugin


def tdl_db_init(db, root_rest_name):
    """
    """
    if not db[root_rest_name].count():
        db[root_rest_name].insert({'ID': '1', 'userName': 'root', 'password': 'password'})

def vsd_db_init(db, root_rest_name):
    """
    """
    if not db[root_rest_name].count():
        db[root_rest_name].insert({'ID': '1', 'userName': 'root', 'password': 'password', 'enterpriseID': '2'})

    if not db['user'].count():
        db['user'].insert({'ID': '1'})

    if not db['group'].count():
        db['group'].insert({'ID': '3', 'name': 'Root Users', 'parentID': '2', 'parentType': 'enterprise'})

    if not db['enterprise'].count():
        db['enterprise'].insert({'ID': '2', 'name': 'csp', 'description': 'default enterprise'})

    if not db['systemconfig'].count():
        db['systemconfig'].insert({'ID': '3'})

def auth_function(request, session, root_api, storage_controller):
    """
    """
    print "HERE"
    # add a filter here
    auth = storage_controller.get(root_api, '1')

    if request.parameters["username"] == auth.user_name and request.parameters["password"] == auth.password:
        auth.api_key = session.uuid
        auth.password = None
        return auth

    return None




def start():

    """
    """
    channel = GARESTChannel()
    # storage_plugin = GAMongoStoragePlugin(db_name='vsd', db_initialization_function=vsd_db_init)
    storage_plugin = GAMongoStoragePlugin(db_name='garuda', db_initialization_function=tdl_db_init)
    authentication_plugin = GASimpleAuthenticationPlugin(auth_function=auth_function)


    sdk_infos = [{'identifier': 'current', 'module': 'tdldk.v1_0'}]
    # sdk_infos = [{'identifier': 'current', 'module': 'vspk.v3_2'}]

    garuda = Garuda(sdks_info=sdk_infos, channels=[channel], plugins=[storage_plugin, authentication_plugin])
    garuda.start()


if __name__ == '__main__':
    start()

