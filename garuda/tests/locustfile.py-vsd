# -*- coding: utf8 -*-

from locust import HttpLocust, TaskSet, task
from tdldk.v1_0 import *
import json
import os
import uuid

class UserBehavior(TaskSet):
    """
    """
    AUTH    = os.environ['LOCUST_AUTH']
    LIST_ID = os.environ['LOCUST_LIST_ID']
    TASK_ID = os.environ['LOCUST_TASK_ID']
    USER_ID = os.environ['LOCUST_USER_ID']

    def on_start(self):
        pass

    @task
    def lists(self):
        """
        """
        self.client.get("/nuage/api/v3_2/enterprises", headers={'Authorization': 'XREST Y3Nwcm9vdDo4OTY1NGQ4My1jMDI5LTQ4ODMtOGFiNC02ZDEzNjI1Yzg5M2U=', 'X-Nuage-Organization':'csp'}, verify=False)

    # @task
    # def one_list(self):
    #     """
    #     """
    #     self.client.get("/lists/%s" % self.LIST_ID, headers={'Authorization': '%s' % self.AUTH, 'X-Nuage-Organization':'csp'}, verify=False)
    #
    # @task
    # def users(self):
    #     """
    #     """
    #     self.client.get("/users", headers={'Authorization': '%s' % self.AUTH, 'X-Nuage-Organization':'csp'}, verify=False)
    #
    # @task
    # def tasks_in_list(self):
    #     """
    #     """
    #     self.client.get("/lists/%s/tasks" % self.LIST_ID, headers={'Authorization': '%s' % self.AUTH, 'X-Nuage-Organization':'csp'}, verify=False)
    #
    # @task
    # def users_in_task(self):
    #     """
    #     """
    #     self.client.get("/tasks/%s/users" % self.TASK_ID, headers={'Authorization': '%s' % self.AUTH, 'X-Nuage-Organization':'csp'}, verify=False)
    #
    @task
    def create_delete_list(self):
        """
        """
        import uuid
        response = self.client.post("/nuage/api/v3_2/enterprises", data=json.dumps({'name': str(uuid.uuid4()), 'description': 'test'}), headers={'Authorization': 'XREST Y3Nwcm9vdDo4OTY1NGQ4My1jMDI5LTQ4ODMtOGFiNC02ZDEzNjI1Yzg5M2U=', 'X-Nuage-Organization':'csp', 'Content-Type': 'application/json'}, verify=False)
        data = json.loads(response.content)
        self.client.delete("/nuage/api/v3_2/enterprises/%s?responseChoice=1" % data[0]["ID"], headers={'Authorization': 'XREST Y3Nwcm9vdDo4OTY1NGQ4My1jMDI5LTQ4ODMtOGFiNC02ZDEzNjI1Yzg5M2U=', 'X-Nuage-Organization':'csp', 'Content-Type': 'application/json'}, verify=False)
    #
    # @task
    # def assign_unassign(self):
    #     """
    #     """
    #     response = self.client.put("/task/%s/users" % self.TASK_ID, data=json.dumps([self.USER_ID]), headers={'Authorization': '%s' % self.AUTH, 'X-Nuage-Organization':'csp'}, verify=False)
    #     response = self.client.put("/task/%s/users" % self.TASK_ID, data=json.dumps([]), headers={'Authorization': '%s' % self.AUTH, 'X-Nuage-Organization':'csp'}, verify=False)
    #
    # @task
    # def update(self):
    #     """
    #     """
    #     self.client.put("/lists/%s" % self.LIST_ID, data=json.dumps({'title': str(uuid.uuid4()), 'description': 'test'}), headers={'Authorization': '%s' % self.AUTH, 'X-Nuage-Organization':'csp'}, verify=False)


class WebsiteUser(HttpLocust):
    """
    """
    task_set = UserBehavior
    min_wait=5
    max_wait=10